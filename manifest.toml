#:schema https://raw.githubusercontent.com/YunoHost/apps/master/schemas/manifest.v2.schema.json

packaging_format = 2

id = "sabnzbd"
name = "sabnzbd"
description.en = "The Free and easy binary newsreader for downloading, verifying and extracting files from Usenet"
description.fr = "Le lecteur de news binaire gratuit et simple pour télécharger, vérifier et extraire des fichiers depuis Usenet"

version = "1.0~ynh1"

maintainers = ["hazzamyman"]

[upstream]
license = "GPL-3.0-or-later"
website = "https://sabnzbd.org"
#demo = "https://demo.example.com"
admindoc = "https://sabnzbd.org/wiki/"
userdoc = "https://yunohost.org/apps"
code = "https://github.com/sabnzbd/sabnzbd"
# FIXME: optional but recommended if relevant, this is meant to contain the Common Platform Enumeration, which is
# sort of a standard id for applications defined by the NIST. In particular, YunoHost may use this is in the future
# to easily track CVE (=security reports) related to apps. The CPE may be obtained by searching here:
# https://nvd.nist.gov/products/cpe/search.
# For example, for Nextcloud, the CPE is 'cpe:2.3:a:nextcloud:nextcloud' (no need to include the version number)
cpe = "cpe:2.3:a:sabnzbd:sabnzbd"

# FIXME: optional but recommended (or remove if irrelevant / not applicable).
# This is meant to be an URL where people can financially support this app, especially when its development is based
# on volunteers and/or financed by its community. YunoHost may later advertise it in the webadmin.
fund = "https://sabnzbd.org/donate"

[integration]
yunohost = ">= 11.1.21"
# FIXME: can be replaced by a list of supported archs using the dpkg --print-architecture nomenclature (amd64/i386/armhf/arm64), for example: ["amd64", "i386"]
architectures = "all"
multi_instance = true

# FIXME: replace with true, false, or "not_relevant".
# Not to confuse with the "sso" key: the "ldap" key corresponds to wether or not a user *can* login on the app using
# its YunoHost credentials.
ldap = false

# FIXME: replace with true, false, or "not_relevant".
# Not to confuse with the "ldap" key: the "sso" key corresponds to wether or not a user is *automatically logged-in*
# on the app when logged-in on the YunoHost portal.
sso = false

# FIXME: replace with an **estimate** minimum disk and RAM requirements. e.g. 20M, 400M, 1G...
disk = "50M"
ram.build = "50M"
ram.runtime = "50M"

[install]
    [install.domain]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    type = "domain"

    [install.path]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    type = "path"
    default = "/sabnzbd"

    [install.init_main_permission]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    # This won't be saved as setting and will instead be used to initialize the SSOwat permission
    type = "group"
    default = "all_users"

    [install.language]
    ask.en = "Choose the application language"
    ask.fr = "Choisissez la langue de l'application"
    type = "select"
    choices = ["fr", "en"]
    default = "fr"

    [install.admin]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    type = "user"

    [install.password]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    # Note that user-provided passwords questions are not automatically saved as setting
    help.en = "SabNZBD currently supports only one user : admin. Choose a password here."
    help.fr = "SabNZBD ne permet qu'un seul utilisateur pour le moment. Choisissez un mot de passe ici."
    type = "password"

[resources]
    # See the packaging documentation for the full set
    # of explanation regarding the behavior and properties for each of those

    [resources.sources]

        [resources.sources.main]
        format = "docker"
        extract = true
        prefetch = false

        amd64.url = "linuxserver/sabnzbd:latest"
        amd64.sha256 = "2782e824edfd779cfd6ef58140d758b77910733bebbeb3ce0c9452f9edc7a9c4"
        
        arm64.url = "linuxserver/sabnzbd:latest"
        arm64.sha256 = "56a2bc94661c859b0907e5c475001de4ebcd2f5ff60a3245f94d1524554ce30b"

    [resources.system_user]
    # This will provision/deprovision a unix system user

    [resources.install_dir]
    # This will create/remove the install dir as /var/www/$app
    # and store the corresponding setting $install_dir

    [resources.data_dir]
    # This will create/remove the data dir as /home/yunohost.app/$app
    # and store the corresponding setting $data_dir

    [resources.permissions]
    # This will configure SSOwat permission for $domain/$path/
    # The initial allowed group of user is configured via the init_main_permission question (public=visitors, private=all_users)
    main.url = "/"
    main.protected = true
    main.allowed = "admins"

    [resources.ports]
    # This will pick a random port for reverse-proxying and store it as the $port setting
    usenet.default = 193

    [resources.apt]
    # This will automatically install/uninstall the following apt packages
    # and implicitly define the $phpversion setting as 8.0 (if phpX.Y-foobar dependencies are listed)
    packages = " "
    packages_from_raw_bash = """
        if [[ "$phpversion" != none ]]; then
            echo "php${phpversion}-fpm"
        fi
    """

    #[resources.database]
    # This will automatically provision/deprovison a MySQL DB and store the corresponding credentials in settings $db_user, $db_name, $db_pwd
    #type = "mysql"
    
